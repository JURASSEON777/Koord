import time
import json
from PIL import Image, ImageDraw, ImageFont
from telegram import Update, Bot, InputFile
import random
from io import BytesIO
from telegram.ext import (
    Updater,
    MessageHandler,
    CallbackContext,
    Filters  # Note: use Filters instead of filters
)


#–°–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
bot = Bot(token="7875443059:AAH1o7EJPDOypj3yIalCBcpOjfizx30NIRU")


def reply_to_text(update: Update, context: CallbackContext):
    user_message = update.message.text.lower()


    # –±–∞–∑–æ–≤–∞—è –ø–æ–º–æ—â—å —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ä–∞–±–æ—Ç—ã –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π + –ø—Ä–æ –ö–æ–æ—Ä–¥–∏–∫–∞
    if user_message == "!–ø–æ–º–æ—â—å":
        update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä!\n\n–Ø —Å–ø–æ—Å–æ–±–Ω—ã–π –ø–∞—Ä–µ–Ω—å, –Ω–æ –∏–Ω–æ–≥–¥–∞ "
                                  "–º–æ–≥—É –∫–æ—Å—è—á–∏—Ç—å. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã, —Ç–æ —Ç—ã–∫–∞–π—Ç–µ –Æ—Ä—É\n\n–í–æ—Ç, —á—Ç–æ —è —É–º–µ—é:\n\n"
                                  "!–¥—É—ç–ª—å - –í—ã–±–∏—Ä–∞–π –∂–µ—Ä—Ç–≤—É –∏ –≤—ã–∑–æ–≤–∏ –µ—ë –Ω–∞ –¥—É—ç–ª—å\n"
                                  "!—Ä—É–ª–µ—Ç–∫–∞ - –í—ã—Ö–æ–¥ –≥–æ—Ä–¥–æ–≥–æ –≤–æ–ª–∫–∞-–æ–¥–∏–Ω–æ—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç –∏—Å–ø—ã—Ç–∞—Ç—å —Å–≤–æ—ë –≤–µ–∑–µ–Ω–∏–µ\n"
                                  "!–º—ã—Å–ª—å - –ü—Ä–æ—á–∏—Ç–∞—Ç—å –≤–µ–ª–∏–∫–∏–µ –∏–∑—Ä–µ—á–µ–Ω–∏—è –∫–æ–ª–ª–µ–≥\n"
                                  "!—Ü–∏—Ç–∞—Ç–∞ - –°–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–µ–ª–∏–∫–æ–µ –∏–∑—Ä–µ—á–µ–Ω–∏–µ\n"
                                  "!–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å, —á—Ç–æ - –°–∞–º –ì–æ—Å–ø–æ–¥—å –ë–æ–≥ –≤—ã—á–∏—Å–ª–∏—Ç, —Å –∫–∞–∫–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ\n"
                                  "!–∫–æ–≥–¥–∞ - –†–∞–∑–ª–æ–∂—É –∫–∞—Ä—Ç—ã —Ç–∞—Ä–æ –∏ —Å–∫–∞–∂—É, –∫–æ–≥–¥–∞ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç —Ç–æ –∏–ª–∏ –∏–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ\n"
                                  "!–ø–æ–¥—Å–∫–∞–∂–∏ - –û—Ç–≤–µ—á—É –±—É–¥–µ—Ç –∏–ª–∏ –Ω–µ –±—É–¥–µ—Ç\n\n"
                                  "–¢–∞–∫–∂–µ, —É –º–µ–Ω—è –µ—Å—Ç—å –¥—Ä—É–≥ - –ö–æ–æ—Ä–¥–∏–∫. –í–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ –µ—Å—Ç—å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç. "
                                  "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—ã—á–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∏ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –∏–º—è. "
                                  "–û–Ω —É–º–µ–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç—ã, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –º–æ–∂–µ—Ç —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"
                                  "P.S. –ù–æ –ø—Ä–æ –º–µ–Ω—è —Ç–æ–∂–µ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ( –Ø –ø—Ä–∞–≤–¥–∞ —Ö–æ—Ä–æ—à–∏–π...",
                                  reply_to_message_id=None,)

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ —á–µ–ª–æ–≤–µ–∫ –∏–∑ —Å–ø–∏—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö —É–∂–µ –ø–µ—Ä–µ–∂–∏–ª —Å–≤–æ—ë –≤—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    try:
        with open('deadmen.json', 'r', encoding="utf-8") as read_file:
            mute = json.load(read_file)
        read_file.close()
    except FileNotFoundError:
        mute = {}
    keys_to_unmute = []
    for key, unmute_date in mute.items():
        if unmute_date < time.time():
            keys_to_unmute.append(key)
    for key in keys_to_unmute:   #–Ω—É–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Ü–∏–∫–ª, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ. –¢—É—Ç –æ–Ω —É–±–∏—Ä–∞–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –º–µ—Ä—Ç–≤—ã—Ö
        mute.pop(key)
        update.message.reply_text(f"–ò –≤—Å—ë-—Ç–∞–∫–∏, {update.effective_user.full_name} –≤–æ—Å–∫—Ä–µ—Å!"
                                  f"\n–ë—É–¥—å –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ ü•∫",
                                  reply_to_message_id=None,)
        with open('deadmen.json', 'w') as write_file:
            json.dump(mute, write_file)
        write_file.close()
    if str(update.effective_user.id) in mute.keys(): #—Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∞–º –ø–æ—á–µ–º—É-—Ç–æ. –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ—Ä—Ç–≤—è–∫–æ–≤
        try:
            update.message.delete(update.effective_user.id)
            return "ok"
        except:
            pass

    # –±–∞–∑–æ–≤—ã–π —á–µ–∫ –Ω–∞ –∞–π–¥–∏ —á–∞—Ç–∞
    elif user_message == "!–∞–π–¥–∏":
        chat_id = update.effective_chat.id
        update.message.reply_text(f"–ê–π–¥–∏ —ç—Ç–æ–≥–æ —á–∞—Ç–∞ => {chat_id}",
                                        reply_to_message_id=None,)

    #–ø–æ–ª—É—á–∞–µ–º –∞–π–¥–∏ –Ω–∞–ø–∞–¥–∞—é—â–µ–≥–æ –∏ –∂–µ—Ä—Ç–≤—ã + –ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∞–Ω–º—É—Ç–∞ –±—É–¥—É—â–µ–≥–æ –º–µ—Ä—Ç–≤–µ—Ü–∞. –¢–∞–∫–∂–µ, —Ä–∞–Ω–¥–æ–º–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º —Ü–∏—Ñ—Ä—É
    elif user_message == "!–¥—É—ç–ª—å":
        iniz = update.effective_user.id
        shertv = update.message.reply_to_message.from_user.id
        dez = random.randint(1, 2)
        unmute_date = time.time() + 3600
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥—É—ç–ª–∏ –Ω–∞ —Å–∞–º–æ–≥–æ —Å–µ–±—è
        if shertv == update.effective_user.id:
            update.message.reply_text("–¢—ã —á—ë —É–¥—É–º–∞–ª? –î–ª—è —Å–∞–º–æ—É–±–∏–π—Å—Ç–≤ –∏—Å–ø–æ–ª—å–∑—É–π !—Ä—É–ª–µ—Ç–∫–∞", reply_to_message_id=None,)

        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥—É—ç–ª–∏ –Ω–∞ –±–æ—Ç–∞
        elif shertv == context.bot.id:
            update.message.reply_text("–¢—ã –Ω–∞ –∫–æ–≥–æ –ø–æ–ª–µ–∑, —ë–ø—Ç. –ë–µ–≥–∏ –≤ —Å—Ç—Ä–∞—Ö–µ, –ø–æ–∫–∞ —è –Ω–µ –ø–µ—Ä–µ–¥—É–º–∞–ª")

        # –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö, –µ—Å–ª–∏ —Ä–∞–Ω–¥–æ–º–Ω–æ –≤—ã–ø–∞–¥–∞–µ—Ç —Ü–∏—Ñ—Ä–∞ 2, —Ç–æ –±–æ—Ç "—É–±–∏–≤–∞–µ—Ç" –Ω–∞–ø–∞–¥–∞—é—â–µ–≥–æ + –∑–∞–∫–∏–¥—ã–≤–∞–µ—Ç
        # –Ω–∞–ø–∞–¥–∞—é—â–µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫ –º—ë—Ä—Ç–≤—ã—Ö

        else:
            if dez == 2:
                update.message.reply_text(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, {update.effective_user.full_name} —É–º–µ—Ä(((\n"
                                          f"–í–∏–Ω–∏—Ç–µ {update.message.reply_to_message.from_user.full_name} –≤–æ –≤—Å—ë–º!",
                                      reply_to_message_id=None,)
                mute[str(iniz)] = unmute_date
                with open('deadmen.json', 'w') as write_file:
                    json.dump(mute, write_file)
                write_file.close()

            # –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö, –µ—Å–ª–∏ —Ä–∞–Ω–¥–æ–º–Ω–æ –≤—ã–ø–∞–¥–∞–µ—Ç —Ü–∏—Ñ—Ä–∞ 1, —Ç–æ –±–æ—Ç "—É–±–∏–≤–∞–µ—Ç" –∂–µ—Ä—Ç–≤—É + –∑–∞–∫–∏–¥—ã–≤–∞–µ—Ç
            # –∂–µ—Ä—Ç–≤—É –≤ —Å–ø–∏—Å–æ–∫ –º—ë—Ä—Ç–≤—ã—Ö
            else:
                update.message.reply_text(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, {update.message.reply_to_message.from_user.full_name} —É–º–µ—Ä(((\n"
                                          f"–í–∏–Ω–∏—Ç–µ {update.effective_user.full_name} –≤–æ –≤—Å—ë–º!",
                                      reply_to_message_id=None,)
                mute[str(shertv)] = unmute_date
                with open('deadmen.json', 'w') as write_file:
                    json.dump(mute, write_file)
                write_file.close()


    # –≤—ã–±–∏—Ä–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 3 –∏ –µ—Å–ª–∏ –≤—ã–ø–∞–¥–∞–µ—Ç 2, —Ç–æ —Å–∞–º–æ—É–±–∏–π—Ü–∞ —É–º–∏—Ä–∞–µ—Ç –∏ –±–æ—Ç –∑–∞–∫–∏–¥—ã–≤–∞–µ—Ç –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫ –º—ë—Ä—Ç–≤—ã—Ö
    elif user_message == "!—Ä—É–ª–µ—Ç–∫–∞":
        des = random.randint(1, 3)
        if des == 2:
            update.message.reply_text(f"{update.effective_user.full_name}, –±—Ä–∞—Ç, —Ç–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ(((\n"
                                      f"–ë—É–¥—å –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!",
                                      reply_to_message_id=None, )
            unmute_date = time.time() + 3600
            mute[str(update.effective_user.id)] = unmute_date
            with open('deadmen.json', 'w') as write_file:
                json.dump(mute, write_file)
            write_file.close()

        else:
            update.message.reply_text(f"{update.effective_user.full_name}, –±—Ä–∞—Ç, –∞ —Ç—ã –≤–µ–∑—É–Ω—á–∏–∫!\n"
                                      f"–ù–æ –ª—É—á—à–µ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞–π –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑...",
                                      reply_to_message_id=None, )

    # –±–æ—Ç –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ–Ω –¥–ª—è –º—ã—Å–ª–∏
    elif user_message == "!–º—ã—Å–ª—å":
        def publish_image(text: str, filename: str = "thought.png"):
            background = Image.open("font.png")
            img = background.resize((1000, 1000))
            draw = ImageDraw.Draw(img)

            # –±–æ—Ç –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—É—é —Ü–∏—Ç–∞—Ç—É –∏–∑ json'–∞ —Å –º—ã—Å–ª—è–º–∏

            try:
                with open('thoughts.json', 'r') as f:
                    saved_messages = json.load(f)
            except (FileNotFoundError, json.JSONDecodeError):
                saved_messages = []

            if not saved_messages:
                update.message.reply_text( f"–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ü–∏—Ç–∞—Ç", reply_to_message_id=None,)

            message_data = random.choice(saved_messages)

            text = message_data.get('thought', '')
            name = message_data.get('name', '')

            # –±–æ—Ç –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ json'–∞ –≤ –∫–∞—Ä—Ç–∏–Ω–∫—É

            title_font = ImageFont.truetype("VelaSans-ExtraBold.ttf", size=60)  # geniral font.ttf
            text_font_1 = ImageFont.truetype("VelaSans-ExtraBold.ttf", size=40)  # vela sans.ttf
            text_font_2 = ImageFont.truetype("VelaSans-Bold.ttf", size=24)  # vela sans.ttf

            # —Ä–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç (—Ü–≤–µ—Ç, –ø–æ–∑–∏—Ü–∏—è, —à—Ä–∏—Ñ—Ç)
            draw.text((180, 30), "–¶–∏—Ç–∞—Ç—ã –≤–µ–ª–∏–∫–∏—Ö –¢–∞–ø–∫–æ–≤", fill=(31, 31, 31), font=title_font)
            draw.text((370, 450), f" ¬´{text}¬ª", fill=(31, 31, 31),
                      font=text_font_1)
            draw.text((600, 620), f"¬© {name}", fill=(31, 31, 31),
                      font=text_font_2)

            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            img.save(filename)
            return filename

        # –±–æ—Ç –∑–∞–∫–∏–¥—ã–≤–∞–µ—Ç –≥–æ—Ç–æ–≤—É—é –º—ã—Å–ª—å –≤ —á–∞—Ç

        image_path = publish_image("")
        with open(image_path, 'rb') as photo:
            bot.send_photo(chat_id=update.effective_chat.id, photo=InputFile(photo))

    elif user_message == "!—Ü–∏—Ç–∞—Ç–∞":
        def generate_image(text: str, filename: str = "thought.png"):
            # –°–æ–∑–¥–∞—ë–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (—Ä–∞–∑–º–µ—Ä, —Ü–≤–µ—Ç —Ñ–æ–Ω–∞)
            background = Image.open("font.png")
            img = background.resize((1000, 1000))
            draw = ImageDraw.Draw(img)
            photos = context.bot.get_user_profile_photos(update.message.reply_to_message.from_user.id, limit=1)

            # –±–æ—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –º—ã—Å–ª—å –≤ —Å–ª–æ–≤–∞—Ä—å –∏ –¥–µ–ª–∞–µ—Ç –∫–æ–ø–∏—é –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤ json

            th_data = {
                "thought": update.message.reply_to_message.text,
                "name": update.message.reply_to_message.from_user.full_name,
                "from_id": update.message.reply_to_message.from_user.id
            }
            thought = th_data.copy()

            # –±–æ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –º—ã—Å–ª—å –≤ json

            try:
                with open('thoughts.json', 'r') as t:
                    messages = json.load(t)
                    if not isinstance(messages, list):
                        messages = []
            except (FileNotFoundError, json.JSONDecodeError):
                messages = []

            messages.append(thought)

            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ —Ñ–∞–π–ª
            with open('thoughts.json', 'w') as t:
                json.dump(messages, t)

            photo = photos.photos[0][-1]
            file = context.bot.get_file(photo.file_id)

                # –°–∫–∞—á–∏–≤–∞–µ–º –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            img_bytes = BytesIO()
            file.download(out=img_bytes)
            image = Image.open(img_bytes)

            title_font = ImageFont.truetype("VelaSans-ExtraBold.ttf", size=60) #geniral font.ttf
            text_font_1 = ImageFont.truetype("VelaSans-ExtraBold.ttf", size=40) #vela sans.ttf
            text_font_2 = ImageFont.truetype("VelaSans-Bold.ttf", size=24) #vela sans.ttf

            # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç (—Ü–≤–µ—Ç, –ø–æ–∑–∏—Ü–∏—è, —à—Ä–∏—Ñ—Ç)
            draw.text((180, 30), "–¶–∏—Ç–∞—Ç—ã –≤–µ–ª–∏–∫–∏—Ö –¢–∞–ø–∫–æ–≤", fill=(31, 31, 31), font=title_font)
            draw.text((370, 450), f" ¬´{update.message.reply_to_message.text}¬ª", fill=(31, 31, 31),
                      font=text_font_1)
            draw.text((600, 620), f"¬© {update.message.reply_to_message.from_user.full_name}", fill=(31, 31, 31),
                      font=text_font_2)
            result = Image.new('RGB', (image.width + 20, image.height + 20))
            result.paste(image, (600,620))

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            img.save(filename)
            return filename

        image_path = generate_image("")
        with open(image_path, 'rb') as photo:
            bot.send_photo(chat_id=update.effective_chat.id, photo=InputFile(photo))


    #elif user_message == "!–æ—Ä–≥ –¥–Ω—è":
    #    update.message.reply_text("–ù–æ—Ä–º–∞–ª—å–Ω–æ, —É –º–µ–Ω—è –∂–µ –Ω–µ—Ç —á—É–≤—Å—Ç–≤!")

    #elif "!–∏–Ω—Ñ–∞" in user_message:
    #    update.message.reply_text("–ù–æ—Ä–º–∞–ª—å–Ω–æ, —É –º–µ–Ω—è –∂–µ –Ω–µ—Ç —á—É–≤—Å—Ç–≤!")


    #elif "!–∫—Ç–æ" in user_message:
     #   update.message.reply_text("–ù–æ—Ä–º–∞–ª—å–Ω–æ, —É –º–µ–Ω—è –∂–µ –Ω–µ—Ç —á—É–≤—Å—Ç–≤!")


    elif user_message[:17] == "!–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å, —á—Ç–æ":
        update.message.reply_text(user_message[18:] + " —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é " + str(random.randint(0, 100)) + "%",
                                      reply_to_message_id=None,)


    elif user_message[:6] == "!–∫–æ–≥–¥–∞":
        ch = random.choice([f"—Å–µ–≥–æ–¥–Ω—è {random.choice(['–¥–Ω—ë–º', '–≤–µ—á–µ—Ä–æ–º', '–Ω–æ—á—å—é'])}",
                                                      f"–∑–∞–≤—Ç—Ä–∞ {random.choice(['—É—Ç—Ä–æ–º', '–¥–Ω—ë–º', '–≤–µ—á–µ—Ä–æ–º', '–Ω–æ—á—å—é'])}",
                                                      f"{random.randint(1,29)} "
                                                      f"{random.choice(['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', 
                                                                        '–∏—é–Ω—è','–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', 
                                                                        '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'])}"
                                                      f" {random.randint(2025,2055)} –≥–æ–¥–∞"])
        update.message.reply_text("–Ø –≤–∏–∂—É... –≤–∏–∂—É, —á—Ç–æ " + user_message[7:] + " " + ch,
                                      reply_to_message_id=None,)


    elif user_message[:9] == "!–ø–æ–¥—Å–∫–∞–∂–∏":
        update.message.reply_text(random.choice(['–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ!', '–ù–µ—Ç, –∫–æ–Ω–µ—á–Ω–æ', '–í–æ–æ–±—â–µ –±–µ–∑ –ø–æ–Ω—è—Ç–∏—è(']),
                                      reply_to_message_id=None,)




def main():
    updater = Updater("7875443059:AAH1o7EJPDOypj3yIalCBcpOjfizx30NIRU")
    dp = updater.dispatcher  # –ü–æ–ª—É—á–∞–µ–º Dispatcher –∏–∑ Updater
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, reply_to_text))  # Fixed `Filters`

    updater.start_polling()
    updater.idle()  # –ë–ª–æ–∫–∏—Ä—É—é—â–∏–π –≤—ã–∑–æ–≤ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞

if __name__ == '__main__':
    main()